"""subset sum problemParent code: knapsackThe problem states that whether a array is subset sum is equal to given sumOp: it should be yes or no.Subset sum+print out the subset using bit manipulationEqual"""def subset_sum(set_array, sum, n, dp_table):    if sum == 0:        return True    if n == 0:        return False    key = str(n) + "_" + str(sum)    if key in dp_table.keys():        return dp_table[key]    if sum < set_array[n - 1]:        dp_table[key] = subset_sum(set_array, sum, n - 1, dp_table)    else:        dp_table[key] = subset_sum(set_array, sum, n - 1, dp_table) or subset_sum(set_array, sum - set_array[n - 1],                                                                                  n - 1, dp_table)    return dp_table[key]def subset_sum_tabularization(set_array, sum, n):    dp_table = [[-1 for col in range(sum + 1)] for row in range(n + 1)]    for i in range(n + 1):        for j in range(sum + 1):            if j == 0:                dp_table[i][j] = True                continue            if i == 0:                dp_table[i][j] = False                continue            if j < set_array[i - 1]:                dp_table[i][j] = dp_table[i-1][j]            else:                dp_table[i][j] = dp_table[i-1][j] or dp_table[i - 1][j - set_array[i - 1]]    print(dp_table)    return dp_table[n][sum]# dp_table = dict()array_input = [11, 12, 2, 7, 5]print(subset_sum_tabularization(array_input, 1, len(array_input)))# print(subset_sum(array_input, 11, len(array_input), dp_table))